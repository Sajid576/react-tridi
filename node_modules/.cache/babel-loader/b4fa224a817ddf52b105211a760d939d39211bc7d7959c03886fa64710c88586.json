{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar normalizeColor = require('normalize-css-color');\nvar invariant = require('invariant');\nvar linear = function linear(t) {\n  return t;\n};\nvar Interpolation = function () {\n  function Interpolation() {\n    _classCallCheck(this, Interpolation);\n  }\n  _createClass(Interpolation, null, [{\n    key: 'create',\n    value: function create(config) {\n      if (config.outputRange && typeof config.outputRange[0] === 'string') {\n        return createInterpolationFromStringOutputRange(config);\n      }\n      var outputRange = config.outputRange;\n      checkInfiniteRange('outputRange', outputRange);\n      var inputRange = config.inputRange;\n      checkInfiniteRange('inputRange', inputRange);\n      checkValidInputRange(inputRange);\n      invariant(inputRange.length === outputRange.length, 'inputRange (' + inputRange.length + ') and outputRange (' + outputRange.length + ') must have the same length');\n      var easing = config.easing || linear;\n      var extrapolateLeft = 'extend';\n      if (config.extrapolateLeft !== undefined) {\n        extrapolateLeft = config.extrapolateLeft;\n      } else if (config.extrapolate !== undefined) {\n        extrapolateLeft = config.extrapolate;\n      }\n      var extrapolateRight = 'extend';\n      if (config.extrapolateRight !== undefined) {\n        extrapolateRight = config.extrapolateRight;\n      } else if (config.extrapolate !== undefined) {\n        extrapolateRight = config.extrapolate;\n      }\n      return function (input) {\n        invariant(typeof input === 'number', 'Cannot interpolation an input which is not a number');\n        var range = findRange(input, inputRange);\n        return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight);\n      };\n    }\n  }]);\n  return Interpolation;\n}();\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight) {\n  var result = input;\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {}\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {}\n  }\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n  result = easing(result);\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n  return result;\n}\nfunction colorToRgba(input) {\n  var int32Color = normalizeColor(input);\n  if (int32Color === null) {\n    return input;\n  }\n  int32Color = int32Color || 0;\n  var r = (int32Color & 0xff000000) >>> 24;\n  var g = (int32Color & 0x00ff0000) >>> 16;\n  var b = (int32Color & 0x0000ff00) >>> 8;\n  var a = (int32Color & 0x000000ff) / 255;\n  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';\n}\nvar stringShapeRegex = /[0-9\\.-]+/g;\nfunction createInterpolationFromStringOutputRange(config) {\n  var outputRange = config.outputRange;\n  invariant(outputRange.length >= 2, 'Bad output range');\n  outputRange = outputRange.map(colorToRgba);\n  checkPattern(outputRange);\n  var outputRanges = outputRange[0].match(stringShapeRegex).map(function () {\n    return [];\n  });\n  outputRange.forEach(function (value) {\n    value.match(stringShapeRegex).forEach(function (number, i) {\n      outputRanges[i].push(+number);\n    });\n  });\n  var interpolations = outputRange[0].match(stringShapeRegex).map(function (value, i) {\n    return Interpolation.create(_extends({}, config, {\n      outputRange: outputRanges[i]\n    }));\n  });\n  var shouldRound = /^rgb/.test(outputRange[0]);\n  return function (input) {\n    var i = 0;\n    return outputRange[0].replace(stringShapeRegex, function () {\n      var val = interpolations[i++](input);\n      return String(shouldRound && i < 4 ? Math.round(val) : val);\n    });\n  };\n}\nfunction checkPattern(arr) {\n  var pattern = arr[0].replace(stringShapeRegex, '');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(pattern === arr[i].replace(stringShapeRegex, ''), 'invalid pattern ' + arr[0] + ' and ' + arr[i]);\n  }\n}\nfunction findRange(input, inputRange) {\n  for (var i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n  return i - 1;\n}\nfunction checkValidInputRange(arr) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n  for (var i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], 'inputRange must be monotonically increasing ' + arr);\n  }\n}\nfunction checkInfiniteRange(name, arr) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity, name + 'cannot be ]-infinity;+infinity[ ' + arr);\n}\nmodule.exports = Interpolation;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","normalizeColor","require","invariant","linear","t","Interpolation","value","create","config","outputRange","createInterpolationFromStringOutputRange","checkInfiniteRange","inputRange","checkValidInputRange","easing","extrapolateLeft","undefined","extrapolate","extrapolateRight","input","range","findRange","interpolate","inputMin","inputMax","outputMin","outputMax","result","Infinity","colorToRgba","int32Color","r","g","b","a","stringShapeRegex","map","checkPattern","outputRanges","match","forEach","number","push","interpolations","shouldRound","test","replace","val","String","Math","round","arr","pattern","name","module","exports"],"sources":["/home/sajid/Desktop/WorkSpace/carniba/workspace/reactTridi/react-tridi/example/node_modules/animated/lib/Interpolation.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\nvar normalizeColor=require('normalize-css-color');\n\nvar invariant=require('invariant');\n\n\n\n\n\n\n\n\n\n\n\n\nvar linear=function linear(t){return t;};var\n\n\n\n\n\nInterpolation=function(){function Interpolation(){_classCallCheck(this,Interpolation);}_createClass(Interpolation,null,[{key:'create',value:function create(\nconfig){\n\nif(config.outputRange&&typeof config.outputRange[0]==='string'){\nreturn createInterpolationFromStringOutputRange(config);\n}\n\nvar outputRange=config.outputRange;\ncheckInfiniteRange('outputRange',outputRange);\n\nvar inputRange=config.inputRange;\ncheckInfiniteRange('inputRange',inputRange);\ncheckValidInputRange(inputRange);\n\ninvariant(\ninputRange.length===outputRange.length,\n'inputRange ('+inputRange.length+') and outputRange ('+\noutputRange.length+') must have the same length');\n\n\nvar easing=config.easing||linear;\n\nvar extrapolateLeft='extend';\nif(config.extrapolateLeft!==undefined){\nextrapolateLeft=config.extrapolateLeft;\n}else if(config.extrapolate!==undefined){\nextrapolateLeft=config.extrapolate;\n}\n\nvar extrapolateRight='extend';\nif(config.extrapolateRight!==undefined){\nextrapolateRight=config.extrapolateRight;\n}else if(config.extrapolate!==undefined){\nextrapolateRight=config.extrapolate;\n}\n\nreturn function(input){\ninvariant(\ntypeof input==='number',\n'Cannot interpolation an input which is not a number');\n\n\nvar range=findRange(input,inputRange);\nreturn interpolate(\ninput,\ninputRange[range],\ninputRange[range+1],\noutputRange[range],\noutputRange[range+1],\neasing,\nextrapolateLeft,\nextrapolateRight);\n\n};\n}}]);return Interpolation;}();\n\n\nfunction interpolate(\ninput,\ninputMin,\ninputMax,\noutputMin,\noutputMax,\neasing,\nextrapolateLeft,\nextrapolateRight)\n{\nvar result=input;\n\n\nif(result<inputMin){\nif(extrapolateLeft==='identity'){\nreturn result;\n}else if(extrapolateLeft==='clamp'){\nresult=inputMin;\n}else if(extrapolateLeft==='extend'){\n\n}\n}\n\nif(result>inputMax){\nif(extrapolateRight==='identity'){\nreturn result;\n}else if(extrapolateRight==='clamp'){\nresult=inputMax;\n}else if(extrapolateRight==='extend'){\n\n}\n}\n\nif(outputMin===outputMax){\nreturn outputMin;\n}\n\nif(inputMin===inputMax){\nif(input<=inputMin){\nreturn outputMin;\n}\nreturn outputMax;\n}\n\n\nif(inputMin===-Infinity){\nresult=-result;\n}else if(inputMax===Infinity){\nresult=result-inputMin;\n}else{\nresult=(result-inputMin)/(inputMax-inputMin);\n}\n\n\nresult=easing(result);\n\n\nif(outputMin===-Infinity){\nresult=-result;\n}else if(outputMax===Infinity){\nresult=result+outputMin;\n}else{\nresult=result*(outputMax-outputMin)+outputMin;\n}\n\nreturn result;\n}\n\nfunction colorToRgba(input){\nvar int32Color=normalizeColor(input);\nif(int32Color===null){\nreturn input;\n}\n\nint32Color=int32Color||0;\n\nvar r=(int32Color&0xff000000)>>>24;\nvar g=(int32Color&0x00ff0000)>>>16;\nvar b=(int32Color&0x0000ff00)>>>8;\nvar a=(int32Color&0x000000ff)/255;\n\nreturn'rgba('+r+', '+g+', '+b+', '+a+')';\n}\n\nvar stringShapeRegex=/[0-9\\.-]+/g;\n\n\n\n\n\n\n\n\n\nfunction createInterpolationFromStringOutputRange(\nconfig)\n{\nvar outputRange=config.outputRange;\ninvariant(outputRange.length>=2,'Bad output range');\noutputRange=outputRange.map(colorToRgba);\ncheckPattern(outputRange);\n\n\n\n\n\n\n\n\n\n\n\n\nvar outputRanges=outputRange[0].match(stringShapeRegex).map(function(){return[];});\noutputRange.forEach(function(value){\n\n\n\nvalue.match(stringShapeRegex).forEach(function(number,i){\noutputRanges[i].push(+number);\n});\n});\n\n\n\n\nvar interpolations=outputRange[0].match(stringShapeRegex).map(function(value,i){\nreturn Interpolation.create(_extends({},\nconfig,{\noutputRange:outputRanges[i]}));\n\n});\n\n\n\nvar shouldRound=/^rgb/.test(outputRange[0]);\n\nreturn function(input){\nvar i=0;\n\n\n\nreturn outputRange[0].replace(stringShapeRegex,function(){\nvar val=interpolations[i++](input);\nreturn String(shouldRound&&i<4?Math.round(val):val);\n});\n};\n}\n\nfunction checkPattern(arr){\nvar pattern=arr[0].replace(stringShapeRegex,'');\nfor(var i=1;i<arr.length;++i){\ninvariant(\npattern===arr[i].replace(stringShapeRegex,''),\n'invalid pattern '+arr[0]+' and '+arr[i]);\n\n}\n}\n\nfunction findRange(input,inputRange){\nfor(var i=1;i<inputRange.length-1;++i){\nif(inputRange[i]>=input){\nbreak;\n}\n}\nreturn i-1;\n}\n\nfunction checkValidInputRange(arr){\ninvariant(arr.length>=2,'inputRange must have at least 2 elements');\nfor(var i=1;i<arr.length;++i){\ninvariant(\narr[i]>=arr[i-1],\n\n\n\n\n\n\n'inputRange must be monotonically increasing '+arr);\n\n}\n}\n\nfunction checkInfiniteRange(name,arr){\ninvariant(arr.length>=2,name+' must have at least 2 elements');\ninvariant(\narr.length!==2||arr[0]!==-Infinity||arr[1]!==Infinity,\n\n\n\n\n\n\nname+'cannot be ]-infinity;+infinity[ '+arr);\n\n}\n\nmodule.exports=Interpolation;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}