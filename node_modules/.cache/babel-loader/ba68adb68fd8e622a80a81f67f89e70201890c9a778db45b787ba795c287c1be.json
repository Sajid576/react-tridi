{"ast":null,"code":"import _slicedToArray from \"/home/sajid/Desktop/WorkSpace/carniba/workspace/reactTridi/react-tridi/example/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/home/sajid/Desktop/WorkSpace/carniba/workspace/reactTridi/react-tridi/example/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Tridi from 'react-tridi';\nimport 'react-tridi/dist/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar App = function App() {\n  _s();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAutoPlayRunning = _useState2[0],\n    setIsAutoPlayRunning = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pins = _useState4[0],\n    setPins = _useState4[1];\n  var tridiRef = useRef(null);\n  var frameChangeHandler = function frameChangeHandler(currentFrameIndex) {\n    console.log('current frame index', currentFrameIndex);\n  };\n  var recordStartHandler = function recordStartHandler(recordingSessionId) {\n    return console.log('on record start', {\n      recordingSessionId: recordingSessionId,\n      pins: pins\n    });\n  };\n  var recordStopHandler = function recordStopHandler(recordingSessionId) {\n    return console.log('on record stop', {\n      recordingSessionId: recordingSessionId,\n      pins: pins\n    });\n  };\n  var pinClickHandler = function pinClickHandler(pin) {\n    console.log('on pin click', pin);\n    tridiRef.current.toggleRecording(true, pin.recordingSessionId);\n  };\n  var onLoadChange = function onLoadChange(loaded, percentage) {\n    console.log('have all Image loaded? : ' + loaded);\n    console.log('current load percentage : ' + percentage + \"%\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tridi, {\n      ref: tridiRef,\n      location: \"./images\",\n      format: \"jpg\",\n      count: \"36\",\n      onFrameChange: frameChangeHandler,\n      autoplaySpeed: 70,\n      onAutoplayStart: function onAutoplayStart() {\n        return setIsAutoPlayRunning(true);\n      },\n      onAutoplayStop: function onAutoplayStop() {\n        return setIsAutoPlayRunning(false);\n      },\n      onRecordStart: recordStartHandler,\n      onRecordStop: recordStopHandler,\n      onPinClick: pinClickHandler,\n      inverse: true,\n      showControlBar: true,\n      showStatusBar: true,\n      mousewheel: true,\n      pins: pins,\n      setPins: setPins,\n      hintOnStartup: true,\n      hintText: \"Drag to view\",\n      onLoadChange: onLoadChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return tridiRef.current.prev();\n      },\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return tridiRef.current.next();\n      },\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return tridiRef.current.toggleAutoplay(!isAutoPlayRunning);\n      },\n      children: isAutoPlayRunning ? 'Pause' : 'Autoplay'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, _this);\n};\n_s(App, \"WnlCP3nT3I9oG5/ooR3tIR06Huc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Tridi","App","isAutoPlayRunning","setIsAutoPlayRunning","pins","setPins","tridiRef","frameChangeHandler","currentFrameIndex","console","log","recordStartHandler","recordingSessionId","recordStopHandler","pinClickHandler","pin","current","toggleRecording","onLoadChange","loaded","percentage","width","prev","next","toggleAutoplay"],"sources":["/home/sajid/Desktop/WorkSpace/carniba/workspace/reactTridi/react-tridi/example/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nimport Tridi from 'react-tridi';\nimport 'react-tridi/dist/index.css';\n\nconst App = () => {\n\tconst [isAutoPlayRunning, setIsAutoPlayRunning] = useState(false);\n\tconst [pins, setPins] = useState([]);\n\tconst tridiRef = useRef(null);\n\n\tconst frameChangeHandler = (currentFrameIndex) => {\n\t\tconsole.log('current frame index', currentFrameIndex);\n\t};\n\n\tconst recordStartHandler = (recordingSessionId) =>\n\t\tconsole.log('on record start', { recordingSessionId, pins });\n\n\tconst recordStopHandler = (recordingSessionId) =>\n\t\tconsole.log('on record stop', { recordingSessionId, pins });\n\n\tconst pinClickHandler = (pin) => {\n\t\tconsole.log('on pin click', pin);\n\t\ttridiRef.current.toggleRecording(true, pin.recordingSessionId);\n\t};\n\n\tconst onLoadChange = (loaded, percentage) =>{\n\t\tconsole.log('have all Image loaded? : '+ loaded);\n\t\tconsole.log('current load percentage : ' + percentage + \"%\");\n\t}\n\n\treturn (\n\t\t<div style={{ width: '500px' }}>\n\t\t\t<Tridi\n\t\t\t\tref={tridiRef}\n\t\t\t\tlocation=\"./images\"\n\t\t\t\tformat=\"jpg\"\n\t\t\t\tcount=\"36\"\n\t\t\t\tonFrameChange={frameChangeHandler}\n\t\t\t\tautoplaySpeed={70}\n\t\t\t\tonAutoplayStart={() => setIsAutoPlayRunning(true)}\n\t\t\t\tonAutoplayStop={() => setIsAutoPlayRunning(false)}\n\t\t\t\tonRecordStart={recordStartHandler}\n\t\t\t\tonRecordStop={recordStopHandler}\n\t\t\t\tonPinClick={pinClickHandler}\n\t\t\t\tinverse\n\t\t\t\tshowControlBar\n\t\t\t\tshowStatusBar\n\t\t\t\tmousewheel\n\t\t\t\tpins={pins}\n\t\t\t\tsetPins={setPins}\n\t\t\t\thintOnStartup\n\t\t\t\thintText=\"Drag to view\"\n\t\t\t\tonLoadChange = {onLoadChange}\n\t\t\t/>\n\n\t\t\t<button onClick={() => tridiRef.current.prev()}>Prev</button>\n\t\t\t<button onClick={() => tridiRef.current.next()}>Next</button>\n\t\t\t<button onClick={() => tridiRef.current.toggleAutoplay(!isAutoPlayRunning)}>\n\t\t\t\t{isAutoPlayRunning ? 'Pause' : 'Autoplay'}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}